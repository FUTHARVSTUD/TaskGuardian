{"ast":null,"code":"var _jsxFileName = \"/Users/samarthmishra/Samarth/TaskGaurdian/app/src/components/AssignTask.js\",\n  _s = $RefreshSig$();\n// src/AssignTask.js\nimport React, { useState, useEffect } from 'react';\nimport axiosInstance from './axiosConfig';\nimport { fetchTasks } from './Tasks'; // Import the function to update the task list\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssignTask = ({\n  taskId,\n  onAssignComplete\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedUserId, setSelectedUserId] = useState('');\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axiosInstance.get('http://localhost:3000/api/users', {\n          // Adjust URL as needed\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setUsers(response.data);\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    };\n    fetchUsers();\n  }, []);\n\n  // ... Handle Submit with an API call to your '/task/:taskId/assign' backend route...\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('token');\n      await axiosInstance.put(`http://localhost:3000/api/tasks/${taskId}/assign`, {\n        // Adjust URL as needed\n        userId: selectedUserId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      onAssignComplete(); // Call to signal the assignment is done\n      fetchTasks(); // Call to update the task list\n    } catch (error) {\n      console.error('Error assigning task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedUserId,\n      onChange: e => setSelectedUserId(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: user._id,\n        children: user.username\n      }, user._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Assign\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(AssignTask, \"acvYb1UK8FYJ1MCGncVM6Qne3WI=\");\n_c = AssignTask;\nexport default AssignTask;\nvar _c;\n$RefreshReg$(_c, \"AssignTask\");","map":{"version":3,"names":["React","useState","useEffect","axiosInstance","fetchTasks","jsxDEV","_jsxDEV","AssignTask","taskId","onAssignComplete","_s","users","setUsers","selectedUserId","setSelectedUserId","fetchUsers","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","handleSubmit","e","preventDefault","put","userId","children","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","map","user","_id","username","onClick","_c","$RefreshReg$"],"sources":["/Users/samarthmishra/Samarth/TaskGaurdian/app/src/components/AssignTask.js"],"sourcesContent":["// src/AssignTask.js\nimport React, { useState, useEffect } from 'react';\nimport axiosInstance from './axiosConfig';\nimport { fetchTasks } from './Tasks'; // Import the function to update the task list\n\nconst AssignTask = ({ taskId, onAssignComplete }) => {\n    const [users, setUsers] = useState([]);\n    const [selectedUserId, setSelectedUserId] = useState('');\n\n    useEffect(() => {\n        const fetchUsers = async () => {\n            try {\n                const token = localStorage.getItem('token');\n                const response = await axiosInstance.get('http://localhost:3000/api/users', { // Adjust URL as needed\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                setUsers(response.data);\n            } catch (error) {\n                console.error('Error fetching users:', error);\n            }\n        };\n        fetchUsers();\n    }, []);\n\n    // ... Handle Submit with an API call to your '/task/:taskId/assign' backend route...\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            const token = localStorage.getItem('token');\n            await axiosInstance.put(`http://localhost:3000/api/tasks/${taskId}/assign`, { // Adjust URL as needed\n                userId: selectedUserId\n            }, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n\n            onAssignComplete(); // Call to signal the assignment is done\n            fetchTasks(); // Call to update the task list\n        } catch (error) {\n            console.error('Error assigning task:', error);\n        }\n    };\n\n\n    return (\n        <div>\n            <select value={selectedUserId} onChange={(e) => setSelectedUserId(e.target.value)}>\n                <option value=\"\">Select User</option>\n                {users.map(user => (\n                    <option key={user._id} value={user._id}>\n                        {user.username}\n                    </option>\n                ))}\n            </select>\n            <button onClick={handleSubmit}>Assign</button>\n        </div>\n    );\n};\n\nexport default AssignTask;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
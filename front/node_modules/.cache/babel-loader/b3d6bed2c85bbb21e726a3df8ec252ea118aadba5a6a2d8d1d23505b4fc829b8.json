{"ast":null,"code":"var _jsxFileName = \"/Users/samarthmishra/Samarth/TaskGaurdian/app/src/components/PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport axiosInstance from './axiosConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    const authenticate = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          setIsAuthenticated(false);\n          return;\n        }\n\n        // Verify the token with the backend\n        const response = await axiosInstance.get('http://localhost:3000/api/auth/verify', {\n          // Adjust URL as needed\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.status === 200) {\n          setIsAuthenticated(true);\n        } else {\n          setIsAuthenticated(false);\n        }\n      } catch (error) {\n        setIsAuthenticated(false);\n        console.error('Authentication error:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    authenticate();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this); // Display a loading state\n  }\n  return isAuthenticated ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 41\n  }, this);\n};\n_s(PrivateRoute, \"WRXjUPutFw5O39gJHBZtWrpgCxI=\");\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","axiosInstance","jsxDEV","_jsxDEV","PrivateRoute","children","_s","isLoading","setIsLoading","useState","isAuthenticated","setIsAuthenticated","useEffect","authenticate","token","localStorage","getItem","response","get","headers","Authorization","status","error","console","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["/Users/samarthmishra/Samarth/TaskGaurdian/app/src/components/PrivateRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport axiosInstance from './axiosConfig';\n\nconst PrivateRoute = ({ children }) => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n    useEffect(() => {\n        const authenticate = async () => {\n            try {\n                const token = localStorage.getItem('token');\n                if (!token) {\n                    setIsAuthenticated(false);\n                    return;\n                }\n\n                // Verify the token with the backend\n                const response = await axiosInstance.get('http://localhost:3000/api/auth/verify', { // Adjust URL as needed\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n\n                if (response.status === 200) {\n                    setIsAuthenticated(true);\n                } else {\n                    setIsAuthenticated(false);\n                }\n\n            } catch (error) {\n                setIsAuthenticated(false);\n                console.error('Authentication error:', error);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        authenticate();\n    }, []);\n\n    if (isLoading) {\n        return <div>Loading...</div>; // Display a loading state\n    }\n\n    return isAuthenticated ? children : <Navigate to=\"/login\" replace />;\n};\n\nexport default PrivateRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,aAAa,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGF,QAAQ,CAAC,KAAK,CAAC;EAE7DG,SAAS,CAAC,MAAM;IACZ,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,IAAI,CAACF,KAAK,EAAE;UACRH,kBAAkB,CAAC,KAAK,CAAC;UACzB;QACJ;;QAEA;QACA,MAAMM,QAAQ,GAAG,MAAMhB,aAAa,CAACiB,GAAG,CAAC,uCAAuC,EAAE;UAAE;UAChFC,OAAO,EAAE;YAAEC,aAAa,EAAG,UAASN,KAAM;UAAE;QAChD,CAAC,CAAC;QAEF,IAAIG,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;UACzBV,kBAAkB,CAAC,IAAI,CAAC;QAC5B,CAAC,MAAM;UACHA,kBAAkB,CAAC,KAAK,CAAC;QAC7B;MAEJ,CAAC,CAAC,OAAOW,KAAK,EAAE;QACZX,kBAAkB,CAAC,KAAK,CAAC;QACzBY,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD,CAAC,SAAS;QACNd,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC;IAEDK,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIN,SAAS,EAAE;IACX,oBAAOJ,OAAA;MAAAE,QAAA,EAAK;IAAU;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAClC;EAEA,OAAOjB,eAAe,GAAGL,QAAQ,gBAAGF,OAAA,CAACH,QAAQ;IAAC4B,EAAE,EAAC,QAAQ;IAACC,OAAO;EAAA;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxE,CAAC;AAACrB,EAAA,CAxCIF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AA0ClB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
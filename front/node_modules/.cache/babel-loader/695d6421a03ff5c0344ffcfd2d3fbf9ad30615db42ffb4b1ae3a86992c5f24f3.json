{"ast":null,"code":"var _jsxFileName = \"/Users/samarthmishra/Samarth/TaskGaurdian/app/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axiosInstance from './axiosConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axiosInstance.post('http://localhost:3000/api/auth/login', {\n        // Adjust URL as needed\n        username,\n        password\n      });\n      localStorage.setItem('token', response.data.token);\n      // Redirect to a 'dashboard' or main tasks page after successful authentication\n      if (location !== '/Tasks') {}\n      location.href = '/Tasks';\n    } catch (error) {\n      setErrorMessage('Invalid username or password'); // Display error message\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      placeholder: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"q37Po17WbhPwv8Y2XJ4Bs6FUZXE=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axiosInstance","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","response","post","localStorage","setItem","data","token","location","href","error","onSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/samarthmishra/Samarth/TaskGaurdian/app/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axiosInstance from './axiosConfig';\n\n\nconst Login = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            const response = await axiosInstance.post('http://localhost:3000/api/auth/login', { // Adjust URL as needed\n                username,\n                password\n            });\n\n            localStorage.setItem('token', response.data.token);\n            // Redirect to a 'dashboard' or main tasks page after successful authentication\n            if (location !== '/Tasks') {\n                \n            }\n            location.href = '/Tasks';\n        } catch (error) {\n            setErrorMessage('Invalid username or password'); // Display error message\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {errorMessage && <p className=\"error\">{errorMessage}</p>}\n            <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"Username\" />\n            <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\" />\n            <button type=\"submit\">Login</button>\n        </form>\n    );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMd,aAAa,CAACe,IAAI,CAAC,sCAAsC,EAAE;QAAE;QAChFV,QAAQ;QACRE;MACJ,CAAC,CAAC;MAEFS,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACI,IAAI,CAACC,KAAK,CAAC;MAClD;MACA,IAAIC,QAAQ,KAAK,QAAQ,EAAE,CAE3B;MACAA,QAAQ,CAACC,IAAI,GAAG,QAAQ;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZZ,eAAe,CAAC,8BAA8B,CAAC,CAAC,CAAC;IACrD;EACJ,CAAC;EAED,oBACIR,OAAA;IAAMqB,QAAQ,EAAEZ,YAAa;IAAAa,QAAA,GACxBf,YAAY,iBAAIP,OAAA;MAAGuB,SAAS,EAAC,OAAO;MAAAD,QAAA,EAAEf;IAAY;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxD3B,OAAA;MAAO4B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAE1B,QAAS;MAAC2B,QAAQ,EAAGpB,CAAC,IAAKN,WAAW,CAACM,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC;IAAU;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3G3B,OAAA;MAAO4B,IAAI,EAAC,UAAU;MAACC,KAAK,EAAExB,QAAS;MAACyB,QAAQ,EAAGpB,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC;IAAU;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/G3B,OAAA;MAAQ4B,IAAI,EAAC,QAAQ;MAAAN,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEf,CAAC;AAACzB,EAAA,CAjCID,KAAK;AAAAgC,EAAA,GAALhC,KAAK;AAmCX,eAAeA,KAAK;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/samarthmishra/Samarth/TaskGaurdian/app/src/components/TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axiosInstance from './axiosConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('token');\n      await axiosInstance.post('http://localhost:3000/api/tasks', {\n        // Adjust URL as needed\n        title,\n        description\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Reset the form, update task list (refetch)\n      setTitle('');\n      setDescription('');\n    } catch (error) {\n      console.error('Error creating task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Task Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      placeholder: \"Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskForm, \"1UKQWTfo2RWmkwPNsekAdQbvqFk=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","axiosInstance","jsxDEV","_jsxDEV","TaskForm","_s","title","setTitle","description","setDescription","handleSubmit","e","preventDefault","token","localStorage","getItem","post","headers","Authorization","error","console","onSubmit","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/samarthmishra/Samarth/TaskGaurdian/app/src/components/TaskForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axiosInstance from './axiosConfig';\n\nconst TaskForm = () => {\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            const token = localStorage.getItem('token');\n            await axiosInstance.post('http://localhost:3000/api/tasks', { // Adjust URL as needed\n                title,\n                description\n            }, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n\n            // Reset the form, update task list (refetch)\n            setTitle('');\n            setDescription('');\n\n        } catch (error) {\n            console.error('Error creating task:', error);\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} placeholder=\"Task Title\" />\n            <textarea value={description} onChange={(e) => setDescription(e.target.value)} placeholder=\"Description\" />\n            <button type=\"submit\">Add Task</button>\n        </form>\n    );\n};\n\nexport default TaskForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMd,aAAa,CAACe,IAAI,CAAC,iCAAiC,EAAE;QAAE;QAC1DV,KAAK;QACLE;MACJ,CAAC,EAAE;QACCS,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASL,KAAM;QAAE;MAChD,CAAC,CAAC;;MAEF;MACAN,QAAQ,CAAC,EAAE,CAAC;MACZE,cAAc,CAAC,EAAE,CAAC;IAEtB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,oBACIhB,OAAA;IAAMkB,QAAQ,EAAEX,YAAa;IAAAY,QAAA,gBACzBnB,OAAA;MAAOoB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAElB,KAAM;MAACmB,QAAQ,EAAGd,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvG5B,OAAA;MAAUqB,KAAK,EAAEhB,WAAY;MAACiB,QAAQ,EAAGd,CAAC,IAAKF,cAAc,CAACE,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3G5B,OAAA;MAAQoB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEf,CAAC;AAAC1B,EAAA,CAhCID,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
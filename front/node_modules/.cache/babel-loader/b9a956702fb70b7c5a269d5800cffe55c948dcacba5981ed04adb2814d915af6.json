{"ast":null,"code":"var _jsxFileName = \"/Users/samarthmishra/Samarth/TaskGaurdian/app/src/components/EditTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axiosInstance from './axiosConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditTask = ({\n  taskId,\n  onEditComplete\n}) => {\n  _s();\n  // Pass in required props\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [status, setStatus] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchTask = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axiosInstance.get(`http://localhost:3000/api/tasks/${taskId}`, {\n          // Adjust URL as needed\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setTitle(response.data.title);\n        setDescription(response.data.description);\n        setStatus(response.data.status);\n      } catch (error) {\n        console.error('Error fetching task:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchTask();\n  }, [taskId]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('token');\n      await axiosInstance.put(`http://localhost:3000/api/tasks/${taskId}`, {\n        // Adjust URL as needed\n        title,\n        description,\n        status\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      onEditComplete(); // Signal that the edit is complete\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Save Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(EditTask, \"t6ThgM6EgGTyOClz6i7vH+OMafc=\");\n_c = EditTask;\nexport default EditTask;\nvar _c;\n$RefreshReg$(_c, \"EditTask\");","map":{"version":3,"names":["React","useState","useEffect","axiosInstance","jsxDEV","_jsxDEV","EditTask","taskId","onEditComplete","_s","title","setTitle","description","setDescription","status","setStatus","isLoading","setIsLoading","fetchTask","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","handleSubmit","e","preventDefault","put","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","_c","$RefreshReg$"],"sources":["/Users/samarthmishra/Samarth/TaskGaurdian/app/src/components/EditTask.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axiosInstance from './axiosConfig';\n\nconst EditTask = ({ taskId, onEditComplete }) => { // Pass in required props\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [status, setStatus] = useState('');\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchTask = async () => {\n            try {\n                const token = localStorage.getItem('token');\n                const response = await axiosInstance.get(`http://localhost:3000/api/tasks/${taskId}`, { // Adjust URL as needed\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                setTitle(response.data.title);\n                setDescription(response.data.description);\n                setStatus(response.data.status);\n            } catch (error) {\n                console.error('Error fetching task:', error);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n        fetchTask();\n    }, [taskId]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const token = localStorage.getItem('token');\n            await axiosInstance.put(`http://localhost:3000/api/tasks/${taskId}`, { // Adjust URL as needed\n                title,\n                description,\n                status\n            }, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n\n            onEditComplete(); // Signal that the edit is complete\n\n        } catch (error) {\n            console.error('Error updating task:', error);\n        }\n    };\n\n    if (isLoading) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {/* Input fields for title, description, status */}\n            <button type=\"submit\">Save Changes</button>\n        </form>\n    );\n};\n\nexport default EditTask;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAAE;EAC/C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACZ,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,QAAQ,GAAG,MAAMnB,aAAa,CAACoB,GAAG,CAAE,mCAAkChB,MAAO,EAAC,EAAE;UAAE;UACpFiB,OAAO,EAAE;YAAEC,aAAa,EAAG,UAASN,KAAM;UAAE;QAChD,CAAC,CAAC;QACFR,QAAQ,CAACW,QAAQ,CAACI,IAAI,CAAChB,KAAK,CAAC;QAC7BG,cAAc,CAACS,QAAQ,CAACI,IAAI,CAACd,WAAW,CAAC;QACzCG,SAAS,CAACO,QAAQ,CAACI,IAAI,CAACZ,MAAM,CAAC;MACnC,CAAC,CAAC,OAAOa,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD,CAAC,SAAS;QACNV,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC;IACDC,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACX,MAAM,CAAC,CAAC;EAEZ,MAAMsB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMZ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMlB,aAAa,CAAC6B,GAAG,CAAE,mCAAkCzB,MAAO,EAAC,EAAE;QAAE;QACnEG,KAAK;QACLE,WAAW;QACXE;MACJ,CAAC,EAAE;QACCU,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASN,KAAM;QAAE;MAChD,CAAC,CAAC;MAEFX,cAAc,CAAC,CAAC,CAAC,CAAC;IAEtB,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,IAAIX,SAAS,EAAE;IACX,oBAAOX,OAAA;MAAA4B,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,oBACIhC,OAAA;IAAMiC,QAAQ,EAAET,YAAa;IAAAI,QAAA,eAEzB5B,OAAA;MAAQkC,IAAI,EAAC,QAAQ;MAAAN,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEf,CAAC;AAAC5B,EAAA,CAtDIH,QAAQ;AAAAkC,EAAA,GAARlC,QAAQ;AAwDd,eAAeA,QAAQ;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}